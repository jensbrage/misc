
==================== FINAL INTERFACE ====================
2016-09-12 14:56:49.874995 UTC

interface main@main:Main 7103
  interface hash: 0d9ca82b0f3621847255caecaf6f6535
  ABI hash: 5c1de2aa97ffa6a9fc9f5c09db803120
  export-list hash: 93c8aaabcaaa31686210c394f8c42d79
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 94c78c8d935fcdae7ca3bc8187762955
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
  Main.spec
module dependencies: Data.String.StripSpec
                     Misc.DeBruijnSequenceSpec
package dependencies: HUnit-1.3.1.2@HUnit_AzBU5jSVcUy6oxicItOe0b
                      MonadRandom-0.4.2.3@Monad_I7tEJH7vOtsKQS7CpG48fz
                      QuickCheck-2.8.2@Quick_6TxL5Cx3o2p0HsyT59KWiD
                      ansi-terminal-0.6.2.3@ansit_BDlVdfJGo3VHCIHxPTNjH1
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      async-2.1.0@async_KuqnF1GrhHK5nNp6Zzm3jy base-4.8.2.0
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      hspec-core-2.2.3@hspec_2wZj3tYQKit6zwgvpRU19S
                      hspec-2.2.3@hspec_Ah5y3cxd3oWFMsWyuzozuw
                      hspec-expectations-0.7.2@hspec_L6DVfMRGHnq8YrNzdhEpIo
                      integer-gmp-1.0.0.0 misc-0.1.0.0@misc_7jKk0pnbgs89KYe2GFy4TX
                      mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC
                      primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3
                      quickcheck-io-0.1.3@quick_BwVqWR3Vxyt7z0zrIaShFJ
                      random-1.1@rando_9Kgekc9yEaLHLNUuw6paWL
                      random-shuffle-0.0.4@rando_9kOz9tEn1526ShtWz8x59X
                      setenv-0.1.1.3@seten_6IUqFDI6NejGrNz9ulqEjc
                      split-0.2.3.1@split_2IxbOPGrTSq7kFrJA7odmE
                      stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD template-haskell-2.10.0.0
                      tf-random-0.5@tfran_1eLmkn3WUnC8NZpPuDLGKF
                      time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
orphans: MonadRandom-0.4.2.3@Monad_I7tEJH7vOtsKQS7CpG48fz:Control.Monad.Random
         base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         quickcheck-io-0.1.3@quick_BwVqWR3Vxyt7z0zrIaShFJ:Test.QuickCheck.IO
         stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD:Control.Monad.STM
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         hspec-core-2.2.3@hspec_2wZj3tYQKit6zwgvpRU19S:Test.Hspec.Core.Example
                         pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3:Control.Monad.Primitive
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  hspec-core-2.2.3@hspec_2wZj3tYQKit6zwgvpRU19S:Test.Hspec.Core.Runner 4aa5fcae487e2e0afcb820354072c60c
import  -/  hspec-core-2.2.3@hspec_2wZj3tYQKit6zwgvpRU19S:Test.Hspec.Core.Spec d25dddc837e31d1f6bc7ec604ee173e6
import  -/  hspec-core-2.2.3@hspec_2wZj3tYQKit6zwgvpRU19S:Test.Hspec.Core.Spec.Monad 610a41ec7704b4b8505d6f65d3adc520
import  -/  hspec-2.2.3@hspec_Ah5y3cxd3oWFMsWyuzozuw:Test.Hspec.Discover 78923476cd870a32318f08a1382e310f
import  -/  Data.String.StripSpec d58f170a269a80ca5ad217a33afd1a6d
  exports: df2a56387de8d6aa9184df4c54931fc5
  spec 53ee016209c45f9d24df79000bc858c9
import  -/  Misc.DeBruijnSequenceSpec da6dd0d6710e9006d12d476fc0f6421f
  exports: 863bbb9e1fec0ef1368a0df35012408e
  spec 6dea006167e4ca31277f94494b6db8cd
751d14d9dec79e30a9bde404d49ff3f0
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
6cac2ad1c01ec6a741bf3852de6b8a61
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Test.Hspec.Core.Runner.hspec2
                        Test.Hspec.Options.defaultConfig
                        Main.main2
                          `cast`
                        (Trans
                             (Sym (GHC.Types.NTCo:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Writer.Lazy.NTCo:WriterT[0]
                                            <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                            <GHC.Types.IO>_R
                                            <()>_N))
                                  (Sym (Test.Hspec.Core.Spec.Monad.NTCo:SpecM[0] <()>_N) <()>_N)))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.die2 @ () ipv
                   0 -> (# ipv, GHC.Tuple.() #) } } } }) -}
fac4e50a1299ca6135c271544bd032c7
  main10 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main11
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.Tree
                           (Test.Hspec.Core.Example.ActionWith ())
                           (Test.Hspec.Core.Tree.Item ())))) -}
26206d4cdb5d72dcdd3984e025986384
  main11 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main12
                   Data.String.StripSpec.main4) -}
b9e08575f17d07e6b6081eadceac4469
  main12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main14
                   Main.main13) -}
e6be10a5c60f7d9f2a4e2bd9e4b32c46
  main13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ata.String.Strip"#) -}
24d78b321ca2dfe80c8e753cecf43043
  main14 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'D') -}
02a60178f6293ec581adf5f75f7ace6e
  main15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "src-spec/Data/String/StripSpec.hs"#) -}
9ff81b17b8901b667a0bc60fd76eed75
  main16 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
41c08fff15d7f2fd0fd0ffbb804a939c
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Test.Hspec.Discover.postProcessSpec1
                        Main.main15
                        Main.main8
                          `cast`
                        (Trans
                             (Sym (GHC.Types.NTCo:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Writer.Lazy.NTCo:WriterT[0]
                                            <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                            <GHC.Types.IO>_R
                                            <()>_N))
                                  (Sym (Test.Hspec.Core.Spec.Monad.NTCo:SpecM[0] <()>_N) <()>_N)))
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Test.Hspec.Discover.postProcessSpec1
                        Main.main7
                        Main.main3
                          `cast`
                        (Trans
                             (Sym (GHC.Types.NTCo:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Writer.Lazy.NTCo:WriterT[0]
                                            <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                            <GHC.Types.IO>_R
                                            <()>_N))
                                  (Sym (Test.Hspec.Core.Spec.Monad.NTCo:SpecM[0] <()>_N) <()>_N)))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 (# ipv2,
                    (case ipv3 of wild { (,) b1 w' -> b1 },
                     case ipv1 of wild { (,) a1 w6 ->
                     GHC.Base.++
                       @ (Test.Hspec.Core.Tree.Tree
                            (Test.Hspec.Core.Example.ActionWith ())
                            (Test.Hspec.Core.Tree.Item ()))
                       w6
                       (case ipv3 of wild1 { (,) b1 w' -> w' }) }) #) } }) -}
6a39607e3924a1eaa54163cd37cf26b1
  main3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           [Test.Hspec.Core.Tree.Tree
              (Test.Hspec.Core.Example.ActionWith ())
              (Test.Hspec.Core.Tree.Item ())]) #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 case Misc.DeBruijnSequenceSpec.spec1
                        eta2 of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    (GHC.Tuple.(),
                     GHC.Types.:
                       @ (Test.Hspec.Core.Tree.Tree
                            (Test.Hspec.Core.Example.ActionWith ())
                            (Test.Hspec.Core.Tree.Item ()))
                       (Test.Hspec.Core.Tree.Node
                          @ (Test.Hspec.Core.Example.ActionWith ())
                          @ (Test.Hspec.Core.Tree.Item ())
                          Main.main4
                          (case ipv1 of wild { (,) ds2 w1 -> w1 }))
                       (GHC.Types.[]
                          @ (Test.Hspec.Core.Tree.Tree
                               (Test.Hspec.Core.Example.ActionWith ())
                               (Test.Hspec.Core.Tree.Item ())))) #) }) -}
dac5de3e4140a7008fd7085d7126d672
  main4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main6
                   Main.main5) -}
d4ccbd622b877b24484400006ccdfcbf
  main5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "isc.DeBruijnSequence"#) -}
b3e502a36725c7fdc2592c90dded75e1
  main6 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'M') -}
f1601df757afdc91744b09245b0451fd
  main7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "src-spec/Misc/DeBruijnSequenceSpec.hs"#) -}
9de9296b46b5ab7cc4fa494fb5104e03
  main8 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           [Test.Hspec.Core.Tree.Tree
              (Test.Hspec.Core.Example.ActionWith ())
              (Test.Hspec.Core.Tree.Item ())]) #)
  {- Arity: 1,
     Unfolding: (\ eta2 :: GHC.Prim.State#
                             GHC.Prim.RealWorld[OneShot] ->
                 (# eta2, Main.main9 #)) -}
6a8e4261a14aac4d1f5968c7d942ae64
  main9 ::
    ((),
     [Test.Hspec.Core.Tree.Tree
        (Test.Hspec.Core.Example.ActionWith ())
        (Test.Hspec.Core.Tree.Item ())])
  {- Unfolding: ((GHC.Tuple.(), Main.main10)) -}
0221d8ad3f34fb8ccd9b2f6e833da0da
  spec :: Test.Hspec.Core.Spec.Monad.Spec
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main2
                  `cast`
                (Trans
                     (Sym (GHC.Types.NTCo:IO[0]
                               <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                     (Trans
                          (Sym (Control.Monad.Trans.Writer.Lazy.NTCo:WriterT[0]
                                    <[Test.Hspec.Core.Tree.SpecTree ()]>_N <GHC.Types.IO>_R <()>_N))
                          (Sym (Test.Hspec.Core.Spec.Monad.NTCo:SpecM[0] <()>_N) <()>_N))) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

